{
	"gen-component": {
		"prefix": "gen-component",
		"body": [
		  "import React from \"react\";",
		  "import { makeStyles } from \"@mui/styles\";",
		  "import { useTranslation } from \"react-i18next\";",
		  "import CommonStyles from \"components/CommonStyles\";",
		  "import CommonIcons from \"components/CommonIcons\";",
		  "",
		  "const useStyles = makeStyles((theme) => {",
		  "  return {};",
		  "});",
		  "",
		  "const ${1} = (props) => {",
		  "  //! State",
		  "  const classes = useStyles();",
		  "  const { t } = useTranslation();",
		  "",
		  "  //! Function",
		  "",
		  "  //! Render",
		  "  return <div>${1}</div>;",
		  "};",
		  "",
		  "export default ${1};",
		  ""
		],
		"description": "gen-component"
	  },
	  "genHooks": {
		"prefix": "genHooks",
		"body": [
		  "import { showError } from 'helpers/handleError';",
		  "import { useEffect, useRef, useState, useCallback } from 'react';",
		  "import simServices from 'services/simServices';",
		  "",
		  "const $1 = () => {",
		  "  const [data, setData] = useState([]);",
		  "  const [loading, setLoading] = useState(false);",
		  "  const [error, setError] = useState(null);",
		  "",
		  "  const fetch = useCallback(() => {",
		  "    return new Promise(async (resolve, reject) => {",
		  "      try {",
		  "        const response = await simServices.getListSim();",
		  "        setData(response?.data);",
		  "        resolve();",
		  "      } catch (error) {",
		  "        showError(error);",
		  "        setError(error);",
		  "        reject(error);",
		  "      }",
		  "    });",
		  "  }, []);",
		  "",
		  "  const refetch = useCallback(async () => {",
		  "    await fetch();",
		  "  }, [fetch]);",
		  "",
		  "const refetchWithLoading = useCallback(async () => {",
		  "    try {",
		  "      setLoading(true);",
		  "      await fetch();",
		  "      setLoading(false);",
		  "    } catch (error) {",
		  "      showError(error);",
		  "      setLoading(false);",
		  "    }",
		  "  }, [fetch]);",
		  "",
		  "  useEffect(() => {",
		  "    refetchWithLoading();",
		  "  }, [refetchWithLoading]);",
		  "",
		  "  return { data, loading, error, refetch, refetchWithLoading };",
		  "};",
		  "",
		  "export default $1;",
		  ""
		],
		"description": "genHooks"
	  },
}